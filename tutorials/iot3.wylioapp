{"tree":[{"name":"First Raspberry Pi Application","id":1,"isdir":true,"isroot":true,"children":[{"name":"python","id":2,"isdir":true,"issoftware":true,"children":[{"name":"main.py","id":3,"isdir":false,"ismain":true,"content":""}]}]}],"language":"python","notebook":[{"type":"markdown","text":"# Your first Raspberry Pi Application\n\nThe Raspberry Pi is running *Linux (Raspbian Jessie version)*. We will take some time to talk about this a little later.\n\nAs it is a small computer, you could choose any programming language supported by Linux. For this, we will use python (version 2.7). Let's write our first program.\n\nBelow, you will find the program code. To run it, click the code, press *Shift-Enter* or press the *Run* button on the upper left corner.\n\nAfter running the example, change it so that it prints our your name.","label":"c16a2e2f-5cb4-4ded-a5c7-7c19c49b3234","$$hashKey":"object:822"},{"type":"code","text":"# this is the first python program\nprint 'Hello'","label":"15ecbf9f-9f2e-467e-9589-34a251e334f0","port":{"type":""},"$$hashKey":"object:1012","exception":"","stdout":"Hello\n","stderr":""},{"type":"markdown","text":"## Variables\n\nNow that you know how to print some text, let's talk about variables. Variables are names that can have a value assigned to the.\n\nTo make a new variable, simply write it's name followed by the = sign and a value. The value can be a number, a string (text) or any other python data type.\n\n```python\nx = 2\n```\n\nLet's try this out. As you can see, this will not print out anything. Modify the code so that you can print the value of x.","label":"7644649d-0f27-465b-90fd-6774debd1c94","port":{"type":""},"$$hashKey":"object:1311"},{"type":"code","text":"x=2\nx**2","label":"dfdc3e20-2565-4973-83c5-d1fd9cbe955b","port":{"type":""},"$$hashKey":"object:1589","response":{"type":{"f":"type","s":"int"},"buf":"4"},"exception":"","stdout":"","stderr":""},{"type":"markdown","text":"## Math\n\nLet's do some math. Python supports all the mathematical signs like:\n\n| Sign | Meaning | Example |\n|------|---------|---------|\n|  +   | Plus    | x = x+1 |\n|  -   | Minus   | x = x-1 |\n|  \\*   | Multiply | x = x\\*1 |\n|  /   | Divide    | x = x/2 |\n|  \\*\\*   | Power    | x = x\\*\\*2 |\n\n### Math library\n\nIf you need more complex mathmatical functions, the math library can help you.\n\nFirst we need to import the library using \n\n```python\nimport math\n```\n\nNow you can use the functions\n\n| Function | Meaning | Example |\n|----------|---------|---------|\n|  sin  | Sine    | math.sin (x) |\n|  cos  | Cosine    | math.cos (x) |\n|  sqrt  | Square root ($$\\sqrt{x}$$)    | math.sqrt (x) |\n|  power  | Power ($$x^y$$)   | math.pow (x, y) |\n|  log  | Logarithm ($$\\log_{e}{x}$$)   | math.log (x) |\n|  log10  | Logarithm ($$\\log_{10}{x}$$)   | math.log10 (x) |\n|  exp  | Exponential ($$e^x$$)   | math.exp (x) |\n\nMore about the math library can be found in the library's [documentation](https://docs.python.org/2/library/math.html)\n\nLet's try out some of the functions. Modify the code so that you can try out several functions.\n","label":"64f3547d-bf7b-40c2-8d5c-cac2cbdde316","port":{"type":""},"$$hashKey":"object:1837"},{"type":"code","text":"import math\nmath.sin (10)","label":"6933b2f5-8940-4030-9e74-61689268d9ab","port":{"type":""},"$$hashKey":"object:2140","response":{"type":{"f":"type","s":"float"},"buf":"-0.5440211108893698"},"exception":"","stdout":"","stderr":""}],"title":"First Raspberry Pi Application","date":1485770750472}