{"tree":[{"name":"testMikrocontr","id":1,"isdir":true,"isroot":true,"children":[{"name":"python","id":2,"isdir":true,"issoftware":true,"children":[{"name":"main.py","id":3,"isdir":false,"ismain":true,"content":"import wyliodrin\nfrom time import * \nimport time\nfrom PyMata.pymata import PyMata # import pymata\nimport sys\nimport json\nimport os \nfrom numpy import array, zeros\nimport webserver\nimport datetime\n\narduino = PyMata(\"/dev/ttyACM0\") # connect to an arduino\narduino.set_pin_mode (0, arduino.INPUT, arduino.ANALOG)\n\n\nanalogtemperatur = 0\nuhrzeit = 0 \ntemperatur = zeros(10)\nspeicher = [[0 for j in range(2)] for i in range(20)]\nuebergabe = []\n#analogtemperatur = temperatur.mean(0)\n\ndef dump():\n  fout = open(\"/home/pi/temperatur4.txt\",\"w\")\n  for k in range (0,20):\n      fout.writelines (str(speicher[k][0]) + '\\t' + str(speicher[k][1]) +'\\t\\n')\n  fout.close()\n  return\n  \ndef transform( beginn=0,ende=19 ):\n  x = []\n  y = []\n  for k in range(ende - beginn):\n      x.append (speicher[beginn + k][0])\n      y.append (speicher[beginn + k ][1])\n  print x\n  print y \n  return (x, y)\n\n  \nimport matplotlib.pyplot as plt\nimport StringIO \n\nwhile True:\n  \n  dump()\n  \n  for y in range (0,20):\n    \n    for x in range (0,10) :\n      temperatur[x] = arduino.analog_read (0)\n      time.sleep (0.1)\n    \n    analogtemperatur = temperatur.mean(0)\n    analogtemperatur = analogtemperatur - 157 + 20\n \n    #uhrzeit = (time.strftime(\"%d.%m.%Y %H:%M:%S\"))\n    uhrzeit = time.mktime(datetime.datetime.now().timetuple())\n    print uhrzeit\n    \n    #t = datetime.time(3)\n\n    \n    #print 'second:', t.second\n   \n\n    speicher[y][0] = uhrzeit\n    speicher[y][1] = round(analogtemperatur,2) \n    \n    print speicher[y]\n  webserver.set_figure (transform ())\n  \n\n\n","$$hashKey":"object:2978"},{"name":"webserver.py","id":9744.354204903144,"isdir":false,"content":"#!/usr/bin/python\r\n\r\nfrom thread import start_new_thread\r\nfrom flask import Flask\r\nimport flask\r\nimport matplotlib\r\nimport StringIO\r\nmatplotlib.use ('svg')\r\nimport matplotlib.pyplot as plt\r\napp = Flask(__name__)\r\n\r\n@app.route(\"/\")\r\ndef hello():\r\n    return \"Hello World!\"\r\n\r\n@app.route(\"/light\")\r\ndef light():\r\n    return \"<html\"\r\n  \r\n\r\n@app.route(\"/figure.svg\")\r\ndef figure():\r\n  global x, y\r\n  try:\r\n    \r\n    plt.figure ()\r\n    \r\n    plot = plt.plot (x,y)[0]\r\n    plt.yticks(range(0, 45, 5))\r\n    #([423,423,7647,423,645,4523])[0]\r\n    \r\n    fig = plot.get_figure ()\r\n    \r\n    imgdata = StringIO.StringIO () \r\n    \r\n    fig.savefig (imgdata, format='svg') \r\n    \r\n    resp = flask.Response(imgdata.getvalue ())\r\n    resp.headers['Content-type'] = 'image/svg+xml'\r\n    resp.headers['meta http-equiv'] = 'refresh' \r\n    \r\n    return resp\r\n  except Exception, e:\r\n    print e\r\n\r\nx = []\r\ny = []\r\n\r\ndef set_figure (f):\r\n  global x, y\r\n  x, y = f\r\n\r\ndef run():\r\n  app.run(host='0.0.0.0', debug=False)\r\n\r\n\r\nstart_new_thread(run, ())","$$hashKey":"object:8095"},{"name":"temp.py","id":1728.8974312381692,"isdir":false,"content":" fout = open(\"/home/pi/temperatur4.txt\",\"rw+\")\n    fout.writelines (str(y) + '\\t' + str(uhrzeit) + '\\t' + str(analogtemperatur)+'\\t\\n')\n    \n    for i in range (0,100):\n      \n      zeile = fout.readline()\n      print zeile\n      index = zeile.split(\"\\t\")\n      print index\n      if index[0] == y :\n        fout.writelines (str(y) + '\\t' + str(uhrzeit) + '\\t' + str(analogtemperatur)+'\\t\\n')\n        break\n      i = i+1\n      fout.next\n      \n    \n    fout.close()","$$hashKey":"object:9480"},{"name":"static","id":5863.986301746823,"isdir":true,"children":[{"name":"index.html","id":9928.5022752869,"isdir":false,"content":"<html>\n<head>\n  <meta http-equiv=\"refresh\" content=\"30; URL=http://10.36.15.84:5000/figure.svg\" /> \n  </head>\n    <img src=\"/figure.svg\">\n</html>","$$hashKey":"object:9824"}],"$$hashKey":"object:9803"}],"$$hashKey":"object:2971","m":"run:\n\tpython main.py\n\n"}]}],"language":"python","notebook":[{"type":"markdown","text":"# Steps to build the project","label":"d42a952f-f70a-426d-a92f-55262bf1fd2e","$$hashKey":"object:13114"},{"type":"code","text":"import matplotlib.pyplot as plt\r\nimport StringIO \r\n\r\nfrom flask import Flask\r\napp = Flask(__name__)\r\n\r\n@app.route(\"/\")\r\ndef hello():\r\n    return \"Hello World!\"\r\n\r\n@app.route(\"/light\")\r\ndef light():\r\n    return \"Light is \"\r\n\r\n@app.route(\"/figure\")\r\ndef figure():\r\n  try:\r\n    \r\n    plt.figure ()\r\n    \r\n    plot = plt.plot ([40.20,20,30],[1,5,3])[0]\r\n    #([423,423,7647,423,645,4523])[0]\r\n    \r\n    fig = plot.get_figure ()\r\n    \r\n    imgdata = StringIO.StringIO () \r\n    fig.savefig (imgdata, format='svg') \r\n    return imgdata.getvalue ()\r\n  except Exception, e:\r\n    print e\r\n\r\napp.run(host='0.0.0.0')\r\n\r\n\r\n\r\n","label":"27c297d5-2da7-41b9-870b-40099ba3b512","port":{"type":""},"$$hashKey":"object:13270","exception":"","stdout":"","stderr":" * Running on http://0.0.0.0:5000/\n10.36.15.73 - - [02/Feb/2017 09:42:32] \"GET /figure HTTP/1.1\" 200 -\n"},{"type":"code","text":"\r\n#plt.plot ([[0,0],[10,1]])[0]\r\n\r\n","label":"921bb21f-e438-455f-983f-fb5b77fa06d8","port":{"type":""},"$$hashKey":"object:13438","response":{"type":{"f":"type","s":"list"},"buf":"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]"},"exception":"","stdout":"","stderr":""}],"title":"Webserver_Temperaturmessung","date":1485943116996}